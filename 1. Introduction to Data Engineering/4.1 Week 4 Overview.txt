In the first week
of this course, we took a brief look at requirements gathering as it relates to your work
as a data engineer. We looked at how a
conversation might go between you and
a data scientist at your company about
their needs for the analytics and machine learning projects
they're working on. You saw how a conversation
like this could quickly reveal the need for you to talk to
other stakeholders. In this case, the marketing
team and software engineers. We also took a look at a framework for thinking
like a data engineer, where you first identify business goals and
stakeholder needs, then define requirements for your system based
on those needs, then choose tools and technologies that meet
your requirements, and then finally build
and deploy your system. Now there is a lot packed
into this little framework, and even when I add in the details of what
occurs during each step, things like asking what action your stakeholders will
take in the first step, translating
stakeholder needs into system requirements
in the second step, prototyping and
testing in the third, or evolving your system
in the last step. You can see that there are
still many things that are either left unsaid
or unwritten here. Weeks 2 and 3 of this course were designed to fill in many of those details so
that you can form a more complete mental
model of the stream work, the field of data engineering, and what your role
as a data engineer will look and feel
like in practice. In Week 2, you looked
at the stages and undercurrents of the data
engineering life cycle. There, we focused not only on the components that make
up your data systems, but also on the people involved, including source system owners and downstream end users
that you'll work with. In Week 3, we took a deep dive into the principles of good
data architecture, where you saw that things like planning for failure
and choosing common components or elements of your system design that you should be thinking about
right from the start. Now you have all the pieces
of that mental model that will be critical in your
work as a data engineer. This week, we're going
to pull all those pieces together in the context of a practical on the job scenario. We'll start with
requirements gathering, then choosing tools
and technologies, and finally implementation
of your system. What I would like to
do next is pick up where we left off with those
requirements gathering conversations in the first week of this course and
follow through to defining and documenting your functional and
nonfunctional requirements, as well as the tools and technologies you
could use to build a system that meets
those requirements , and throughout the week, we'll be pausing along
the way to talk about some concepts and best
practices to keep in mind when you encounter new and different scenarios out in the wild as a data engineer. At the end of this week, you'll translate the requirements into an architecture design and then build your system
on the AWS Cloud. Join me in the next
video to get started.