Welcome to this third course of
the data engineering specialization. In completing the previous two courses,
you've already accomplished a lot. In the first course, you got a high level
overview of the field of data engineering, including the data engineering lifecycle. A framework for thinking about
your work as a data engineer, and also practice building data
engineering solutions. In the second course, you took a deep
dive into source systems, ingestion, DataOps, and orchestration. With these two first courses, you've
already built up a powerful toolkit of knowledge and skills for
your work as a data engineer. I'm here again with Joe Rees,
your instructor for these courses. It's great to be with you again and maybe say a bit about what learners
will see next in this course. >> Sure thing. Thanks, Andrew. So the first two weeks of this
course are all about data storage. Then in the third week,
we'll talk about queries. At that point, I can imagine you might be wondering
a whole course on storage and queries? Well, is this really necessary? Believe me, while storage inquiries might
seem straightforward, at first glance, they are anything but straightforward. Would you agree with this, Andrew? What do you think about storage inquiries? >> I think storage inquiries
are not straightforward at all. >> No. >> There are many decisions in
how to store your data that will affect how you can use
the data efficiently afterward. For example, what type of storage
from long-term storage that's cheap, but it's practical to access only
intermittently to data storage using a relational database or
a key value store to storing it in memory. And then also the design of the database
schema, and maybe even deciding which data centers that is, in what parts of
the world you decide to store your data. All this can drive both performance
as well as impact how you have to affect with registry concerns
such as data sovereignty. For example, I was recently just working
on a project with a semiconductor company that couldn't let the data
leave their country. So we had to architect a system that we
wrote here in the United States that ran only in that country and shared only
aggregate results with our US team. And that's just one example, the needs
of different companies are so varied. This has led to a wide range of tools and frameworks that have been developed
to handle these very different needs. >> That's right, so lots of
complexity with storage and queries. So as you've seen in previous courses,
you can think of data storage as a sort of hierarchy, where you have the raw
ingredients of storage at the bottom. Including the physical elements
of storage like magnetic disks, solid state drives, and RAM, as well as
the less tangible elements of storage things like CPU compression,
networking, and serialization. On top of that, you have storage systems
built from these raw ingredients, things like databases and object storage. And on top of that you have storage
abstractions built from these storage systems. So things like data warehouses,
data lakes, and data lake houses. Then, when it comes to querying
the data you have in storage, there are a wide range of tools and
techniques you need to be aware of as a data engineer to ensure your
systems are working efficiently. >> That sounds great, I'm excited about
all this that you cover in this course. And I think you find that in
your work as a data engineer, having deep expertise in
storage solutions and queries will help you be more successful
at every stage of the lifecycle. >> Great, let's get started.