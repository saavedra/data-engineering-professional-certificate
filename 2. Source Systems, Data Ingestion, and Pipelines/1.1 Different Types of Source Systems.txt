The specific source systems you'll work
with as a data engineer will often vary depending on what kind of data
you're ingesting from those systems. The most common type of data you'll work
with is structured data, which is to say, data organized as tables of rows and
columns. Chances are you've worked with
structured data in the past, whether that was in a spreadsheet or
a relational database, or maybe even using Python
to read a CSV file. The other types of data you'll encounter
as a data engineer are semi-structured and unstructured data. Semi-structured data is data
that is not in tabular form, so it's not made up of rows and columns,
but it still has some structure. A common semi-structured data
format you'll run into is what's known as JavaScript
object notation, or JSON. A JSON file contains
a series of key-value pairs. In this example, the first key is firstName with
the corresponding value Joe. The next key is lastName with
the corresponding value Reis. And with JSON format, all these key-value pairs are listed
inside of curly braces like this. And I can have more key-value pairs, including whatever information I
want to record in this format. Each value can take on a different
data type, so for example, a number, string, or an array. In fact, the value in a key-value pair can
even be another series of key-value pairs. And as you can see in this example,
the value for address has a key city, postal code, and
country with the corresponding values. This creates what is called
a nested JSON format. So, as you can see, even though
the data isn't presented as a table, there's still some structure to this data. Unstructured data, on the other hand,
has no predefined structure. For example, text, video, audio, and images are all examples
of unstructured data. But you'll note that things like video,
audio, and images do have an inherent structure
behind the scenes, in the sense that there are dimensions of pixels as well as
colors such as red, blue, and green. We'll dive more into unstructured
data throughout this course. When it comes to ingesting these different
types of data, I'd like to classify the relevant source systems you could
encounter into three general types, databases, files, and streaming systems. While these three types of source
systems don't necessarily correspond one-to-one with the three types of data I
just mentioned, you could say that from databases you'll most often be ingesting
structured and semi-structured data. From streaming systems, you will often be ingesting
semi-structured messages as a data format. And files, well, files could be
anything from text to image, audio, video, or even regular old rows and
columns of tabular data. Let's start by taking
a closer look at databases. Databases store information in
an organized way that allows you to find, retrieve, update, and delete data. The way this works is through
a transactional pattern known as CRUD, which stands for create,
read, update, and delete. The C comes first because, of course, data has to be created before it
can be read, updated, or deleted. Makes sense, right? There's typically a software interface
called the database management system, or DBMS, that sits between the physical
database storage and the person or application interacting with the database. The DBMS is what allows you to access and manipulate the data
stored in the database. There are two types of databases
that we'll look at this week. Relational databases, that store
information in tables with rows and columns, and non-relational,
also known as NoSQL or not only SQL, databases that store non-tabular data. We'll look more closely at both of these
types of databases later this week. Apart from databases, the next most common type of source
system you'll interact with is files. You no doubt already have lots of
experience working with files of various types. These might be documents you store on your
computer, or images, or videos you record with your phone, or maybe even a CSV file
you receive in an email from a coworker. It might seem strange to think of
regular old files as a source system for data engineering, but at its core, a file is just a sequence of
bytes that represent information. Applications of all types
write data to files, and so files are a universal
medium of data exchange. And believe it or not, they're one of
the most common source systems you'll work with as a data engineer. Files, just like data,
can be structured like a spreadsheet, semi-structured like a JSON or
XML file, or unstructured like a text,
image, video, or audio file. You might be receiving or accessing these files from a file
system like Google Drive or an object storage system like Amazon S3,
or simply as an attachment to an email. The third type of source system
you're likely to be ingesting data from is streaming systems. And you can think of streaming systems
as providing a continuous flow of data, recorded as messages that contain
information about events. And those events include something
that happened in the world or a change to the state of a system. In practice, you might be interacting with
a stream of events via message queues or other streaming platforms. For example, an IoT device like a smart
thermostat might record an event that contains the latest
temperature reading and publish that event as a message to a
streaming platform like Kinesis or Kafka. Then, as a data engineer, you could set up
another service to ingest this message and send an update to an embedded
analytics dashboard. In this case, you can think of the
streaming platform as a source system from which you are extracting raw data. In later weeks of this course, you will
see how these streaming systems can also cut across the data engineering lifecycle
and be used in the ingestion and transformation stages to process data for
various downstream use cases. In fact, you can see the same
of all types of source systems, whether you're talking about databases,
files or streaming systems. These could be systems from which you're
ingesting raw data, or they could be systems you build into your data pipelines
at another stage of the lifecycle. So, to recap, as a data engineer, you will extract raw data from
different source systems. This raw data may be structured,
semi-structured or unstructured, and the source systems may be databases,
files or streaming systems. In the next series of videos,
I will go into a bit more detail on the characteristics of each of these
different types of source systems. We'll start with databases, then we'll
look at how object storage works as a data source for files, and after that
we'll dive into message queues, logs and streaming platforms in more detail. Join me in the next video to get started
with a look at relational databases.