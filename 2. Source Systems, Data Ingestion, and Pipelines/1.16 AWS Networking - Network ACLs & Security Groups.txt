As a reminder, in the previous video
we left off having configured the route tables for these subnets which will direct
traffic for the VPC here, well look at a few other networking configurations
you're going to need to know about. In our scenario, the application load balancer will send
Internet traffic to the EC two instances which would then create a connection
with the RDS database instances. For queries, you can configure networking
rules to allow only the network traffic you want to reach these instances. By default, no traffic is allowed
to reach these instances even with the route tables in place. To change that, you first need to
understand security groups and network access control lists or
network acls. Let's start with security groups. Think of security groups
as instance level virtual firewalls controlling both inbound and
outbound traffic. By default, security groups
deny all inbound traffic and allow all outbound traffic. So you need to define inbound rules which
determine what types of traffic you want to allow and where you want to
allow that traffic to come from. Security groups are also stateful,
which means that if you allow inbound traffic to an instance, the return
traffic is automatically allowed even if there are no outbound rules
explicitly permitting it. For instance, if you permit
an inbound HTTP traffic on Port 80, the responses to those HTTP requests
are allowed to flow out without needing an explicit outbound rule. This stateful nature simplifies security
group management because you don't have to create matching outbound rules for
every inbound rule. Resources that are placed in VPCs use
security groups like EC2 instances, load balancers, and
RDS database instances. All can use security groups with
different rules, and the rules for security groups can reference
other security groups. In our example, we have an application
load balancer that would need to accept traffic for HTTP on port 80 and
HTTPs on port 443 from the Internet. Then we have an EC two
instance hosting a web server. So you'll need to allow HTTP and HTTPS
traffic coming from the application load balancer, so you could reference the
security group used by the load balancer. We also have RDS database instances
which would need to allow TCP on Port 3306,
which is commonly used by databases like MySQL coming from the security
group used by the EC2 instances. This is called security group chaining. Now let's walk through an example of
creating a security group that could be used by the application load
balancer to set up a security group, navigate to the VPC dashboard,
and then select security groups. Then select create security group. First you give it a name
like Albsg then we want to select which VPC this
security group belongs to. Because security groups
are associated with one VPC, we will select the project one VPC. Next we need to define the inbound rules. I'll select Add rule. Then for the type of traffic,
I will select HTTP, which will auto populate
the port range to be 80. Then I will select 0.0.0.0/0 for the source which will allow traffic
from the Internet on Port 80. Then I will add another rule for
HTTPs which uses port 443 and will allow traffic from the Internet. Then I will select create security group. This security group can then be
associated with the load balancer. Now let's move on to network acls
which provide an additional layer of security at the subnet level. Unlike security groups which are stateful,
network ACLs are stateless. This means you need to define both
inbound and outbound rules explicitly. They offer more granular control over
traffic and can be particularly useful for implementing security
policies at the subnet level. By default, network acls allow all
inbound and outbound traffic, but you can modify these rules to meet
your specific security requirements. We don't need to change this behavior for
our simple use case, but it's still important to know as it's one of the main
ways to control network traffic on AWS and you may need to tweak these rules if you
are troubleshooting a network issue. So this is what our diagram looks like
now, accounting for the places where we could apply security groups and
network acls in the upcoming lab. You will need to troubleshoot
connectivity issues with a database, which is a very common scenario you
will run into as a data engineer. So what I want to do now is summarize
everything you learned about networking on AWS in the last few videos so that you
know where you need to look when trying to troubleshoot network
connectivity issues on AWS. First, we covered the basics of VPCs and
subnets, which give you a way to define
a private isolated network on AWS. We discussed the importance of
correctly configuring route tables to direct traffic within the VPC and
to the Internet. You learned how to set up public subnets
with routes pointing to the Internet gateway, allowing resources within
these subnets to access the Internet. Similarly, we covered configuring
private subnets with routes pointing to the NAT Gateway, enabling instances to
initiate outbound connections securely. Notice how we call the subnets public
subnets or private subnets, but it's actually the route table
that determines that access. There is nothing magic about
creating a public or private subnet. It's all about correctly configuring and
managing the route tables. Next, we explored security groups,
which act as virtual firewalls. At the instance level. They control both inbound and outbound
traffic, and their stateful nature means that if you allow inbound traffic, the
return traffic is automatically permitted. It's most common to configure inbound
rules only on security groups, as they by default,
allow all outbound traffic. We then moved on to network acls, which provide an additional layer
of security at the subnet level. Unlike security groups, network ACLs are
stateless, requiring explicit rules for both inbound and outbound traffic. This allows for
more granular control and is useful for implementing specific
security requirements. So if you encounter connectivity issues, start by verifying your VPC has
an Internet gateway properly attached, that the route tables have appropriate
rules to direct traffic correctly, and that the route table associations with
the subnets are configured correctly. Next, check security groups to make sure
they have the needed rules in place, and review network acls to confirm
they allow the necessary traffic. Also, double check instance
configurations to ensure they are associated with the correct
security groups and subnets. In the next lab, you'll put these concepts
into practice by troubleshooting database connectivity issues using the knowledge
you've gained to identify and resolve network problems. Next up, Joe will walk you through
the details of the last lab assignment for this week.